{
  "contractName": "ProxySurveys",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currentAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "_initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currentAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"_initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/User/Projects/Surveys_V2/contracts/ProxySurveys.sol\":\"ProxySurveys\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/User/Projects/Surveys_V2/contracts/ProxySurveys.sol\":{\"keccak256\":\"0x406ddf09c37c0b0a749d9290a6b18f694aa25477867f400ed57644da39f59ae5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2719f79a7637cabb11ebda358d1aa3aa6dcd385be185d36b0442dd02b3b6529\",\"dweb:/ipfs/QmSfb9zrGYHuVZ3denaZTnFhHVXjpH5nkER1E2MqrxVWTg\"]},\"/C/Users/User/Projects/Surveys_V2/contracts/StorageSurveys.sol\":{\"keccak256\":\"0x23665400fad1fb93bab6f676d7b9125aa4a5719739aea8b84023a3e4f0e18cba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbf57bd16012660447092d02a1b6b0f78b3a77b347db79e70a21d8d256089712\",\"dweb:/ipfs/QmWFfrZU1y51W6xwwnNL2diUYdGvE7qsJQ1UTcNcWRp84q\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xf204d98eef08edacf5a02a2af1516ea4febdb6aba7a1ae5ac8deb6e568fd3dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4dea62bffbd180772a6cfe7cb90e3a045c52d6b502bdb2fdff83193da42d8d0\",\"dweb:/ipfs/QmW8qGZ5nngajmv5Aamdrpkeuq7S5YCVaR7rtcqNekKHtK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xdfb4f812600ba4ce6738c35584ceb8c9433472583051b48ba5b1f66cb758a498\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df02dffe1c1de089d9b4f6192f0dcf464526f2230f420b3deec4645e0cdd2bff\",\"dweb:/ipfs/QmcqXGAU3KJqwrgUVoGJ2W8osomhSJ4R5kdsRpbuW3fELS\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002056380380620020568339818101604052810190620000379190620004f9565b6040518060400160405280600b81526020017f537572766579546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f535654000000000000000000000000000000000000000000000000000000000081525081600c9080519060200190620000bb92919062000425565b5080600d9080519060200190620000d492919062000425565b506012600e60006101000a81548160ff021916908360ff16021790555050506000620001056200020f60201b60201c565b905080600e60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35081600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000670de0b6b3a7640000820290506200020633826200021760201b60201c565b505050620006b3565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200028a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200028190620005f1565b60405180910390fd5b6200029e60008383620003c860201b60201c565b620002ba81600b54620003cd60201b62000d6b1790919060201c565b600b819055506200031981600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620003cd60201b62000d6b1790919060201c565b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003bc919062000613565b60405180910390a35050565b505050565b6000808284019050838110156200041b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200041290620005cf565b60405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200046857805160ff191683800117855562000499565b8280016001018555821562000499579182015b82811115620004985782518255916020019190600101906200047b565b5b509050620004a89190620004ac565b5090565b5b80821115620004c7576000816000905550600101620004ad565b5090565b600081519050620004dc816200067f565b92915050565b600081519050620004f38162000699565b92915050565b600080604083850312156200050d57600080fd5b60006200051d85828601620004cb565b92505060206200053085828601620004e2565b9150509250929050565b600062000549601b8362000630565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b60006200058b601f8362000630565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b620005c98162000675565b82525050565b60006020820190508181036000830152620005ea816200053a565b9050919050565b600060208201905081810360008301526200060c816200057c565b9050919050565b60006020820190506200062a6000830184620005be565b92915050565b600082825260208201905092915050565b60006200064e8262000655565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200068a8162000641565b81146200069657600080fd5b50565b620006a48162000675565b8114620006b057600080fd5b50565b61199380620006c36000396000f3fe6080604052600436106100f75760003560e01c806370a082311161008a578063a457c2d711610059578063a457c2d714610421578063a9059cbb1461045e578063dd62ed3e1461049b578063f2fde38b146104d8576100f8565b806370a0823114610377578063715018a6146103b45780638da5cb5b146103cb57806395d89b41146103f6576100f8565b806323b872dd116100c657806323b872dd146102a75780633072cf60146102e4578063313ce5671461030f578063395093511461033a576100f8565b806306fdde03146101eb578063095ea7b31461021657806318160ddd146102535780631c1b87721461027e576100f8565b5b6000600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff16600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561017b57600080fd5b60606000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509050600080825160208401855af43d604051816000823e82600081146101e7578282f35b8282fd5b3480156101f757600080fd5b50610200610501565b60405161020d91906116cf565b60405180910390f35b34801561022257600080fd5b5061023d6004803603810190610238919061136a565b6105a3565b60405161024a91906116b4565b60405180910390f35b34801561025f57600080fd5b506102686105c1565b60405161027591906117d1565b60405180910390f35b34801561028a57600080fd5b506102a560048036038101906102a091906112b6565b6105cb565b005b3480156102b357600080fd5b506102ce60048036038101906102c9919061131b565b61060f565b6040516102db91906116b4565b60405180910390f35b3480156102f057600080fd5b506102f96106e8565b60405161030691906116b4565b60405180910390f35b34801561031b57600080fd5b506103246106fb565b60405161033191906117ec565b60405180910390f35b34801561034657600080fd5b50610361600480360381019061035c919061136a565b610712565b60405161036e91906116b4565b60405180910390f35b34801561038357600080fd5b5061039e600480360381019061039991906112b6565b6107c5565b6040516103ab91906117d1565b60405180910390f35b3480156103c057600080fd5b506103c961080e565b005b3480156103d757600080fd5b506103e0610966565b6040516103ed9190611699565b60405180910390f35b34801561040257600080fd5b5061040b610990565b60405161041891906116cf565b60405180910390f35b34801561042d57600080fd5b506104486004803603810190610443919061136a565b610a32565b60405161045591906116b4565b60405180910390f35b34801561046a57600080fd5b506104856004803603810190610480919061136a565b610aff565b60405161049291906116b4565b60405180910390f35b3480156104a757600080fd5b506104c260048036038101906104bd91906112df565b610b1d565b6040516104cf91906117d1565b60405180910390f35b3480156104e457600080fd5b506104ff60048036038101906104fa91906112b6565b610ba4565b005b6060600c8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105995780601f1061056e57610100808354040283529160200191610599565b820191906000526020600020905b81548152906001019060200180831161057c57829003601f168201915b5050505050905090565b60006105b76105b0610dc0565b8484610dc8565b6001905092915050565b6000600b54905090565b80600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061061c848484610f93565b6106dd84610628610dc0565b6106d88560405180606001604052806028815260200161191160289139600a60008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061068e610dc0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461122c9092919063ffffffff16565b610dc8565b600190509392505050565b600860009054906101000a900460ff1681565b6000600e60009054906101000a900460ff16905090565b60006107bb61071f610dc0565b846107b685600a6000610730610dc0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d6b90919063ffffffff16565b610dc8565b6001905092915050565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610816610dc0565b73ffffffffffffffffffffffffffffffffffffffff16600e60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089c90611771565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600e60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600e60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600e60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600d8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a285780601f106109fd57610100808354040283529160200191610a28565b820191906000526020600020905b815481529060010190602001808311610a0b57829003601f168201915b5050505050905090565b6000610af5610a3f610dc0565b84610af08560405180606001604052806025815260200161193960259139600a6000610a69610dc0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461122c9092919063ffffffff16565b610dc8565b6001905092915050565b6000610b13610b0c610dc0565b8484610f93565b6001905092915050565b6000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610bac610dc0565b73ffffffffffffffffffffffffffffffffffffffff16600e60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3290611771565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca290611711565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600e60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600e60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080828401905083811015610db6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dad90611751565b60405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2f906117b1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ea8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9f90611731565b60405180910390fd5b80600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610f8691906117d1565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611003576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffa90611791565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611073576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106a906116f1565b60405180910390fd5b61107e838383611287565b6110ea816040518060600160405280602681526020016118eb60269139600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461122c9092919063ffffffff16565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061117f81600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d6b90919063ffffffff16565b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161121f91906117d1565b60405180910390a3505050565b6000838311158290611274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126b91906116cf565b60405180910390fd5b5060008385039050809150509392505050565b505050565b60008135905061129b816118bc565b92915050565b6000813590506112b0816118d3565b92915050565b6000602082840312156112c857600080fd5b60006112d68482850161128c565b91505092915050565b600080604083850312156112f257600080fd5b60006113008582860161128c565b92505060206113118582860161128c565b9150509250929050565b60008060006060848603121561133057600080fd5b600061133e8682870161128c565b935050602061134f8682870161128c565b9250506040611360868287016112a1565b9150509250925092565b6000806040838503121561137d57600080fd5b600061138b8582860161128c565b925050602061139c858286016112a1565b9150509250929050565b6113af81611823565b82525050565b6113be81611835565b82525050565b60006113cf82611807565b6113d98185611812565b93506113e9818560208601611878565b6113f2816118ab565b840191505092915050565b600061140a602383611812565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611470602683611812565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114d6602283611812565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061153c601b83611812565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b600061157c602083611812565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006115bc602583611812565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611622602483611812565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b61168481611861565b82525050565b6116938161186b565b82525050565b60006020820190506116ae60008301846113a6565b92915050565b60006020820190506116c960008301846113b5565b92915050565b600060208201905081810360008301526116e981846113c4565b905092915050565b6000602082019050818103600083015261170a816113fd565b9050919050565b6000602082019050818103600083015261172a81611463565b9050919050565b6000602082019050818103600083015261174a816114c9565b9050919050565b6000602082019050818103600083015261176a8161152f565b9050919050565b6000602082019050818103600083015261178a8161156f565b9050919050565b600060208201905081810360008301526117aa816115af565b9050919050565b600060208201905081810360008301526117ca81611615565b9050919050565b60006020820190506117e6600083018461167b565b92915050565b6000602082019050611801600083018461168a565b92915050565b600081519050919050565b600082825260208201905092915050565b600061182e82611841565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561189657808201518184015260208101905061187b565b838111156118a5576000848401525b50505050565b6000601f19601f8301169050919050565b6118c581611823565b81146118d057600080fd5b50565b6118dc81611861565b81146118e757600080fd5b5056fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220b4a35b0116bf0a0b7202539031052a4ca2cf15e20fbfe1c504816c0b2bd9bdc064736f6c634300060c0033",
  "deployedBytecode": "0x6080604052600436106100f75760003560e01c806370a082311161008a578063a457c2d711610059578063a457c2d714610421578063a9059cbb1461045e578063dd62ed3e1461049b578063f2fde38b146104d8576100f8565b806370a0823114610377578063715018a6146103b45780638da5cb5b146103cb57806395d89b41146103f6576100f8565b806323b872dd116100c657806323b872dd146102a75780633072cf60146102e4578063313ce5671461030f578063395093511461033a576100f8565b806306fdde03146101eb578063095ea7b31461021657806318160ddd146102535780631c1b87721461027e576100f8565b5b6000600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff16600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561017b57600080fd5b60606000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509050600080825160208401855af43d604051816000823e82600081146101e7578282f35b8282fd5b3480156101f757600080fd5b50610200610501565b60405161020d91906116cf565b60405180910390f35b34801561022257600080fd5b5061023d6004803603810190610238919061136a565b6105a3565b60405161024a91906116b4565b60405180910390f35b34801561025f57600080fd5b506102686105c1565b60405161027591906117d1565b60405180910390f35b34801561028a57600080fd5b506102a560048036038101906102a091906112b6565b6105cb565b005b3480156102b357600080fd5b506102ce60048036038101906102c9919061131b565b61060f565b6040516102db91906116b4565b60405180910390f35b3480156102f057600080fd5b506102f96106e8565b60405161030691906116b4565b60405180910390f35b34801561031b57600080fd5b506103246106fb565b60405161033191906117ec565b60405180910390f35b34801561034657600080fd5b50610361600480360381019061035c919061136a565b610712565b60405161036e91906116b4565b60405180910390f35b34801561038357600080fd5b5061039e600480360381019061039991906112b6565b6107c5565b6040516103ab91906117d1565b60405180910390f35b3480156103c057600080fd5b506103c961080e565b005b3480156103d757600080fd5b506103e0610966565b6040516103ed9190611699565b60405180910390f35b34801561040257600080fd5b5061040b610990565b60405161041891906116cf565b60405180910390f35b34801561042d57600080fd5b506104486004803603810190610443919061136a565b610a32565b60405161045591906116b4565b60405180910390f35b34801561046a57600080fd5b506104856004803603810190610480919061136a565b610aff565b60405161049291906116b4565b60405180910390f35b3480156104a757600080fd5b506104c260048036038101906104bd91906112df565b610b1d565b6040516104cf91906117d1565b60405180910390f35b3480156104e457600080fd5b506104ff60048036038101906104fa91906112b6565b610ba4565b005b6060600c8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105995780601f1061056e57610100808354040283529160200191610599565b820191906000526020600020905b81548152906001019060200180831161057c57829003601f168201915b5050505050905090565b60006105b76105b0610dc0565b8484610dc8565b6001905092915050565b6000600b54905090565b80600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061061c848484610f93565b6106dd84610628610dc0565b6106d88560405180606001604052806028815260200161191160289139600a60008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061068e610dc0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461122c9092919063ffffffff16565b610dc8565b600190509392505050565b600860009054906101000a900460ff1681565b6000600e60009054906101000a900460ff16905090565b60006107bb61071f610dc0565b846107b685600a6000610730610dc0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d6b90919063ffffffff16565b610dc8565b6001905092915050565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610816610dc0565b73ffffffffffffffffffffffffffffffffffffffff16600e60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089c90611771565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600e60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600e60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600e60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600d8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a285780601f106109fd57610100808354040283529160200191610a28565b820191906000526020600020905b815481529060010190602001808311610a0b57829003601f168201915b5050505050905090565b6000610af5610a3f610dc0565b84610af08560405180606001604052806025815260200161193960259139600a6000610a69610dc0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461122c9092919063ffffffff16565b610dc8565b6001905092915050565b6000610b13610b0c610dc0565b8484610f93565b6001905092915050565b6000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610bac610dc0565b73ffffffffffffffffffffffffffffffffffffffff16600e60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3290611771565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca290611711565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600e60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600e60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080828401905083811015610db6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dad90611751565b60405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2f906117b1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ea8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9f90611731565b60405180910390fd5b80600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610f8691906117d1565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611003576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffa90611791565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611073576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106a906116f1565b60405180910390fd5b61107e838383611287565b6110ea816040518060600160405280602681526020016118eb60269139600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461122c9092919063ffffffff16565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061117f81600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d6b90919063ffffffff16565b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161121f91906117d1565b60405180910390a3505050565b6000838311158290611274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126b91906116cf565b60405180910390fd5b5060008385039050809150509392505050565b505050565b60008135905061129b816118bc565b92915050565b6000813590506112b0816118d3565b92915050565b6000602082840312156112c857600080fd5b60006112d68482850161128c565b91505092915050565b600080604083850312156112f257600080fd5b60006113008582860161128c565b92505060206113118582860161128c565b9150509250929050565b60008060006060848603121561133057600080fd5b600061133e8682870161128c565b935050602061134f8682870161128c565b9250506040611360868287016112a1565b9150509250925092565b6000806040838503121561137d57600080fd5b600061138b8582860161128c565b925050602061139c858286016112a1565b9150509250929050565b6113af81611823565b82525050565b6113be81611835565b82525050565b60006113cf82611807565b6113d98185611812565b93506113e9818560208601611878565b6113f2816118ab565b840191505092915050565b600061140a602383611812565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611470602683611812565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114d6602283611812565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061153c601b83611812565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b600061157c602083611812565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006115bc602583611812565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611622602483611812565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b61168481611861565b82525050565b6116938161186b565b82525050565b60006020820190506116ae60008301846113a6565b92915050565b60006020820190506116c960008301846113b5565b92915050565b600060208201905081810360008301526116e981846113c4565b905092915050565b6000602082019050818103600083015261170a816113fd565b9050919050565b6000602082019050818103600083015261172a81611463565b9050919050565b6000602082019050818103600083015261174a816114c9565b9050919050565b6000602082019050818103600083015261176a8161152f565b9050919050565b6000602082019050818103600083015261178a8161156f565b9050919050565b600060208201905081810360008301526117aa816115af565b9050919050565b600060208201905081810360008301526117ca81611615565b9050919050565b60006020820190506117e6600083018461167b565b92915050565b6000602082019050611801600083018461168a565b92915050565b600081519050919050565b600082825260208201905092915050565b600061182e82611841565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561189657808201518184015260208101905061187b565b838111156118a5576000848401525b50505050565b6000601f19601f8301169050919050565b6118c581611823565b81146118d057600080fd5b50565b6118dc81611861565b81146118e757600080fd5b5056fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220b4a35b0116bf0a0b7202539031052a4ca2cf15e20fbfe1c504816c0b2bd9bdc064736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "242:980:2:-:0;;;333:252;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2013:141:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2093:4;2085:5;:12;;;;;;;;;;;;:::i;:::-;;2117:6;2107:7;:16;;;;;;;;;;;;:::i;:::-;;2145:2;2133:9;;:14;;;;;;;;;;;;;;;;;;2013:141;;865:17:5;885:12;:10;;;:12;;:::i;:::-;865:32;;916:9;907:6;;:18;;;;;;;;;;;;;;;;;;973:9;940:43;;969:1;940:43;;;;;;;;;;;;831:159;455:15:2::1;438:14;;:32;;;;;;;;;;;;;;;;;;477:26;523:8;506:13;:26;477:55;;539:40;545:10;557:21;539:5;;;:40;;:::i;:::-;333:252;::::0;;242:980;;590:104:4;643:15;677:10;670:17;;590:104;:::o;7835:370:7:-;7937:1;7918:21;;:7;:21;;;;7910:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;7986:49;8015:1;8019:7;8028:6;7986:20;;;:49;;:::i;:::-;8061:24;8078:6;8061:12;;:16;;;;;;:24;;;;:::i;:::-;8046:12;:39;;;;8116:30;8139:6;8116:9;:18;8126:7;8116:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;:::i;:::-;8095:9;:18;8105:7;8095:18;;;;;;;;;;;;;;;:51;;;;8182:7;8161:37;;8178:1;8161:37;;;8191:6;8161:37;;;;;;:::i;:::-;;;;;;;;7835:370;;:::o;10697:92::-;;;;:::o;874:176:6:-;932:7;951:9;967:1;963;:5;951:17;;991:1;986;:6;;978:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1042:1;1035:8;;;874:176;;;;:::o;242:980:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;:::i;:::-;68:71;;;;:::o;146:134::-;;230:6;224:13;215:22;;242:33;269:5;242:33;:::i;:::-;209:71;;;;:::o;287:399::-;;;419:2;407:9;398:7;394:23;390:32;387:2;;;435:1;432;425:12;387:2;470:1;487:64;543:7;534:6;523:9;519:22;487:64;:::i;:::-;477:74;;449:108;588:2;606:64;662:7;653:6;642:9;638:22;606:64;:::i;:::-;596:74;;567:109;381:305;;;;;:::o;694:327::-;;854:67;918:2;913:3;854:67;:::i;:::-;847:74;;954:29;950:1;945:3;941:11;934:50;1012:2;1007:3;1003:12;996:19;;840:181;;;:::o;1030:331::-;;1190:67;1254:2;1249:3;1190:67;:::i;:::-;1183:74;;1290:33;1286:1;1281:3;1277:11;1270:54;1352:2;1347:3;1343:12;1336:19;;1176:185;;;:::o;1369:113::-;1452:24;1470:5;1452:24;:::i;:::-;1447:3;1440:37;1434:48;;:::o;1489:416::-;;1689:2;1678:9;1674:18;1666:26;;1739:9;1733:4;1729:20;1725:1;1714:9;1710:17;1703:47;1764:131;1890:4;1764:131;:::i;:::-;1756:139;;1660:245;;;:::o;1912:416::-;;2112:2;2101:9;2097:18;2089:26;;2162:9;2156:4;2152:20;2148:1;2137:9;2133:17;2126:47;2187:131;2313:4;2187:131;:::i;:::-;2179:139;;2083:245;;;:::o;2335:222::-;;2462:2;2451:9;2447:18;2439:26;;2476:71;2544:1;2533:9;2529:17;2520:6;2476:71;:::i;:::-;2433:124;;;;:::o;2565:163::-;;2680:6;2675:3;2668:19;2717:4;2712:3;2708:14;2693:29;;2661:67;;;;:::o;2736:91::-;;2798:24;2816:5;2798:24;:::i;:::-;2787:35;;2781:46;;;:::o;2834:121::-;;2907:42;2900:5;2896:54;2885:65;;2879:76;;;:::o;2962:72::-;;3024:5;3013:16;;3007:27;;;:::o;3041:117::-;3110:24;3128:5;3110:24;:::i;:::-;3103:5;3100:35;3090:2;;3149:1;3146;3139:12;3090:2;3084:74;:::o;3165:117::-;3234:24;3252:5;3234:24;:::i;:::-;3227:5;3224:35;3214:2;;3273:1;3270;3263:12;3214:2;3208:74;:::o;242:980:2:-;;;;;;;",
  "deployedSourceMap": "242:980:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;780:22;805:14;;;;;;;;;;;780:39;;860:1;834:28;;:14;;;;;;;;;;;:28;;;;826:37;;;;;;870:17;890:8;;870:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1013:1;1010;1003:4;997:11;990:4;984;980:15;964:14;957:5;944:71;1035:16;1076:4;1070:11;1112:4;1109:1;1104:3;1089:28;1132:6;1151:1;1146:26;;;;1201:4;1196:3;1189:17;1146:26;1166:4;1161:3;1154:17;2219:81:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4255:166;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3262:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;591:88:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4881:317:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;921:24:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3121:81:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5593:215;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3418:117;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1689:145:5;;;;;;;;;;;;;:::i;:::-;;1066:77;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2413:85:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6295:266;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3738:172;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3968:149;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1983:240:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2219:81:7;2256:13;2288:5;2281:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81;:::o;4255:166::-;4338:4;4354:39;4363:12;:10;:12::i;:::-;4377:7;4386:6;4354:8;:39::i;:::-;4410:4;4403:11;;4255:166;;;;:::o;3262:98::-;3315:7;3341:12;;3334:19;;3262:98;:::o;591:88:2:-;662:11;645:14;;:28;;;;;;;;;;;;;;;;;;591:88;:::o;4881:317:7:-;4987:4;5003:36;5013:6;5021:9;5032:6;5003:9;:36::i;:::-;5049:121;5058:6;5066:12;:10;:12::i;:::-;5080:89;5118:6;5080:89;;;;;;;;;;;;;;;;;:11;:19;5092:6;5080:19;;;;;;;;;;;;;;;:33;5100:12;:10;:12::i;:::-;5080:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5049:8;:121::i;:::-;5187:4;5180:11;;4881:317;;;;;:::o;921:24:3:-;;;;;;;;;;;;;:::o;3121:81:7:-;3162:5;3186:9;;;;;;;;;;;3179:16;;3121:81;:::o;5593:215::-;5681:4;5697:83;5706:12;:10;:12::i;:::-;5720:7;5729:50;5768:10;5729:11;:25;5741:12;:10;:12::i;:::-;5729:25;;;;;;;;;;;;;;;:34;5755:7;5729:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5697:8;:83::i;:::-;5797:4;5790:11;;5593:215;;;;:::o;3418:117::-;3484:7;3510:9;:18;3520:7;3510:18;;;;;;;;;;;;;;;;3503:25;;3418:117;;;:::o;1689:145:5:-;1280:12;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1795:1:::1;1758:40;;1779:6;;;;;;;;;;;1758:40;;;;;;;;;;;;1825:1;1808:6;;:19;;;;;;;;;;;;;;;;;;1689:145::o:0;1066:77::-;1104:7;1130:6;;;;;;;;;;;1123:13;;1066:77;:::o;2413:85:7:-;2452:13;2484:7;2477:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2413:85;:::o;6295:266::-;6388:4;6404:129;6413:12;:10;:12::i;:::-;6427:7;6436:96;6475:15;6436:96;;;;;;;;;;;;;;;;;:11;:25;6448:12;:10;:12::i;:::-;6436:25;;;;;;;;;;;;;;;:34;6462:7;6436:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6404:8;:129::i;:::-;6550:4;6543:11;;6295:266;;;;:::o;3738:172::-;3824:4;3840:42;3850:12;:10;:12::i;:::-;3864:9;3875:6;3840:9;:42::i;:::-;3899:4;3892:11;;3738:172;;;;:::o;3968:149::-;4057:7;4083:11;:18;4095:5;4083:18;;;;;;;;;;;;;;;:27;4102:7;4083:27;;;;;;;;;;;;;;;;4076:34;;3968:149;;;;:::o;1983:240:5:-;1280:12;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2091:1:::1;2071:22;;:8;:22;;;;2063:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2180:8;2151:38;;2172:6;;;;;;;;;;;2151:38;;;;;;;;;;;;2208:8;2199:6;;:17;;;;;;;;;;;;;;;;;;1983:240:::0;:::o;874:176:6:-;932:7;951:9;967:1;963;:5;951:17;;991:1;986;:6;;978:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1042:1;1035:8;;;874:176;;;;:::o;590:104:4:-;643:15;677:10;670:17;;590:104;:::o;9359:340:7:-;9477:1;9460:19;;:5;:19;;;;9452:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9557:1;9538:21;;:7;:21;;;;9530:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9639:6;9609:11;:18;9621:5;9609:18;;;;;;;;;;;;;;;:27;9628:7;9609:27;;;;;;;;;;;;;;;:36;;;;9676:7;9660:32;;9669:5;9660:32;;;9685:6;9660:32;;;;;;:::i;:::-;;;;;;;;9359:340;;;:::o;7035:530::-;7158:1;7140:20;;:6;:20;;;;7132:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7241:1;7220:23;;:9;:23;;;;7212:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7294:47;7315:6;7323:9;7334:6;7294:20;:47::i;:::-;7372:71;7394:6;7372:71;;;;;;;;;;;;;;;;;:9;:17;7382:6;7372:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7352:9;:17;7362:6;7352:17;;;;;;;;;;;;;;;:91;;;;7476:32;7501:6;7476:9;:20;7486:9;7476:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7453:9;:20;7463:9;7453:20;;;;;;;;;;;;;;;:55;;;;7540:9;7523:35;;7532:6;7523:35;;;7551:6;7523:35;;;;;;:::i;:::-;;;;;;;;7035:530;;;:::o;1746:187:6:-;1832:7;1864:1;1859;:6;;1867:12;1851:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1890:9;1906:1;1902;:5;1890:17;;1925:1;1918:8;;;1746:187;;;;;:::o;10697:92:7:-;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;57:78;;;;:::o;142:130::-;;222:6;209:20;200:29;;234:33;261:5;234:33;:::i;:::-;194:78;;;;:::o;279:241::-;;383:2;371:9;362:7;358:23;354:32;351:2;;;399:1;396;389:12;351:2;434:1;451:53;496:7;487:6;476:9;472:22;451:53;:::i;:::-;441:63;;413:97;345:175;;;;:::o;527:366::-;;;648:2;636:9;627:7;623:23;619:32;616:2;;;664:1;661;654:12;616:2;699:1;716:53;761:7;752:6;741:9;737:22;716:53;:::i;:::-;706:63;;678:97;806:2;824:53;869:7;860:6;849:9;845:22;824:53;:::i;:::-;814:63;;785:98;610:283;;;;;:::o;900:491::-;;;;1038:2;1026:9;1017:7;1013:23;1009:32;1006:2;;;1054:1;1051;1044:12;1006:2;1089:1;1106:53;1151:7;1142:6;1131:9;1127:22;1106:53;:::i;:::-;1096:63;;1068:97;1196:2;1214:53;1259:7;1250:6;1239:9;1235:22;1214:53;:::i;:::-;1204:63;;1175:98;1304:2;1322:53;1367:7;1358:6;1347:9;1343:22;1322:53;:::i;:::-;1312:63;;1283:98;1000:391;;;;;:::o;1398:366::-;;;1519:2;1507:9;1498:7;1494:23;1490:32;1487:2;;;1535:1;1532;1525:12;1487:2;1570:1;1587:53;1632:7;1623:6;1612:9;1608:22;1587:53;:::i;:::-;1577:63;;1549:97;1677:2;1695:53;1740:7;1731:6;1720:9;1716:22;1695:53;:::i;:::-;1685:63;;1656:98;1481:283;;;;;:::o;1771:113::-;1854:24;1872:5;1854:24;:::i;:::-;1849:3;1842:37;1836:48;;:::o;1891:104::-;1968:21;1983:5;1968:21;:::i;:::-;1963:3;1956:34;1950:45;;:::o;2002:347::-;;2114:39;2147:5;2114:39;:::i;:::-;2165:71;2229:6;2224:3;2165:71;:::i;:::-;2158:78;;2241:52;2286:6;2281:3;2274:4;2267:5;2263:16;2241:52;:::i;:::-;2314:29;2336:6;2314:29;:::i;:::-;2309:3;2305:39;2298:46;;2094:255;;;;;:::o;2357:372::-;;2517:67;2581:2;2576:3;2517:67;:::i;:::-;2510:74;;2617:34;2613:1;2608:3;2604:11;2597:55;2686:5;2681:2;2676:3;2672:12;2665:27;2720:2;2715:3;2711:12;2704:19;;2503:226;;;:::o;2738:375::-;;2898:67;2962:2;2957:3;2898:67;:::i;:::-;2891:74;;2998:34;2994:1;2989:3;2985:11;2978:55;3067:8;3062:2;3057:3;3053:12;3046:30;3104:2;3099:3;3095:12;3088:19;;2884:229;;;:::o;3122:371::-;;3282:67;3346:2;3341:3;3282:67;:::i;:::-;3275:74;;3382:34;3378:1;3373:3;3369:11;3362:55;3451:4;3446:2;3441:3;3437:12;3430:26;3484:2;3479:3;3475:12;3468:19;;3268:225;;;:::o;3502:327::-;;3662:67;3726:2;3721:3;3662:67;:::i;:::-;3655:74;;3762:29;3758:1;3753:3;3749:11;3742:50;3820:2;3815:3;3811:12;3804:19;;3648:181;;;:::o;3838:332::-;;3998:67;4062:2;4057:3;3998:67;:::i;:::-;3991:74;;4098:34;4094:1;4089:3;4085:11;4078:55;4161:2;4156:3;4152:12;4145:19;;3984:186;;;:::o;4179:374::-;;4339:67;4403:2;4398:3;4339:67;:::i;:::-;4332:74;;4439:34;4435:1;4430:3;4426:11;4419:55;4508:7;4503:2;4498:3;4494:12;4487:29;4544:2;4539:3;4535:12;4528:19;;4325:228;;;:::o;4562:373::-;;4722:67;4786:2;4781:3;4722:67;:::i;:::-;4715:74;;4822:34;4818:1;4813:3;4809:11;4802:55;4891:6;4886:2;4881:3;4877:12;4870:28;4926:2;4921:3;4917:12;4910:19;;4708:227;;;:::o;4943:113::-;5026:24;5044:5;5026:24;:::i;:::-;5021:3;5014:37;5008:48;;:::o;5063:107::-;5142:22;5158:5;5142:22;:::i;:::-;5137:3;5130:35;5124:46;;:::o;5177:222::-;;5304:2;5293:9;5289:18;5281:26;;5318:71;5386:1;5375:9;5371:17;5362:6;5318:71;:::i;:::-;5275:124;;;;:::o;5406:210::-;;5527:2;5516:9;5512:18;5504:26;;5541:65;5603:1;5592:9;5588:17;5579:6;5541:65;:::i;:::-;5498:118;;;;:::o;5623:310::-;;5770:2;5759:9;5755:18;5747:26;;5820:9;5814:4;5810:20;5806:1;5795:9;5791:17;5784:47;5845:78;5918:4;5909:6;5845:78;:::i;:::-;5837:86;;5741:192;;;;:::o;5940:416::-;;6140:2;6129:9;6125:18;6117:26;;6190:9;6184:4;6180:20;6176:1;6165:9;6161:17;6154:47;6215:131;6341:4;6215:131;:::i;:::-;6207:139;;6111:245;;;:::o;6363:416::-;;6563:2;6552:9;6548:18;6540:26;;6613:9;6607:4;6603:20;6599:1;6588:9;6584:17;6577:47;6638:131;6764:4;6638:131;:::i;:::-;6630:139;;6534:245;;;:::o;6786:416::-;;6986:2;6975:9;6971:18;6963:26;;7036:9;7030:4;7026:20;7022:1;7011:9;7007:17;7000:47;7061:131;7187:4;7061:131;:::i;:::-;7053:139;;6957:245;;;:::o;7209:416::-;;7409:2;7398:9;7394:18;7386:26;;7459:9;7453:4;7449:20;7445:1;7434:9;7430:17;7423:47;7484:131;7610:4;7484:131;:::i;:::-;7476:139;;7380:245;;;:::o;7632:416::-;;7832:2;7821:9;7817:18;7809:26;;7882:9;7876:4;7872:20;7868:1;7857:9;7853:17;7846:47;7907:131;8033:4;7907:131;:::i;:::-;7899:139;;7803:245;;;:::o;8055:416::-;;8255:2;8244:9;8240:18;8232:26;;8305:9;8299:4;8295:20;8291:1;8280:9;8276:17;8269:47;8330:131;8456:4;8330:131;:::i;:::-;8322:139;;8226:245;;;:::o;8478:416::-;;8678:2;8667:9;8663:18;8655:26;;8728:9;8722:4;8718:20;8714:1;8703:9;8699:17;8692:47;8753:131;8879:4;8753:131;:::i;:::-;8745:139;;8649:245;;;:::o;8901:222::-;;9028:2;9017:9;9013:18;9005:26;;9042:71;9110:1;9099:9;9095:17;9086:6;9042:71;:::i;:::-;8999:124;;;;:::o;9130:214::-;;9253:2;9242:9;9238:18;9230:26;;9267:67;9331:1;9320:9;9316:17;9307:6;9267:67;:::i;:::-;9224:120;;;;:::o;9351:122::-;;9445:5;9439:12;9429:22;;9410:63;;;:::o;9481:163::-;;9596:6;9591:3;9584:19;9633:4;9628:3;9624:14;9609:29;;9577:67;;;;:::o;9652:91::-;;9714:24;9732:5;9714:24;:::i;:::-;9703:35;;9697:46;;;:::o;9750:85::-;;9823:5;9816:13;9809:21;9798:32;;9792:43;;;:::o;9842:121::-;;9915:42;9908:5;9904:54;9893:65;;9887:76;;;:::o;9970:72::-;;10032:5;10021:16;;10015:27;;;:::o;10049:81::-;;10120:4;10113:5;10109:16;10098:27;;10092:38;;;:::o;10138:268::-;10203:1;10210:101;10224:6;10221:1;10218:13;10210:101;;;10300:1;10295:3;10291:11;10285:18;10281:1;10276:3;10272:11;10265:39;10246:2;10243:1;10239:10;10234:15;;10210:101;;;10326:6;10323:1;10320:13;10317:2;;;10391:1;10382:6;10377:3;10373:16;10366:27;10317:2;10187:219;;;;:::o;10414:97::-;;10502:2;10498:7;10493:2;10486:5;10482:14;10478:28;10468:38;;10462:49;;;:::o;10519:117::-;10588:24;10606:5;10588:24;:::i;:::-;10581:5;10578:35;10568:2;;10627:1;10624;10617:12;10568:2;10562:74;:::o;10643:117::-;10712:24;10730:5;10712:24;:::i;:::-;10705:5;10702:35;10692:2;;10751:1;10748;10741:12;10692:2;10686:74;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./StorageSurveys.sol\";\r\n\r\ncontract ProxySurveys is StorageSurveys, ERC20, Ownable\r\n{\r\n  address currentAddress;\r\n\r\n  constructor(address _currentAddress, uint256 initialSupply) public ERC20(\"SurveyToken\", \"SVT\")\r\n  {\r\n    currentAddress = _currentAddress;\r\n    uint internalInitialSupply = initialSupply * (10 ** 18);\r\n    _mint(msg.sender, internalInitialSupply);\r\n  }\r\n\r\n  function update(address _newAddress) public\r\n  {\r\n    currentAddress = _newAddress;\r\n  }\r\n\r\n  //FALLBACK function\r\n  fallback() payable external\r\n  {\r\n    //Redirect to currentAddress\r\n    address implementation = currentAddress;\r\n    require(currentAddress != address(0));\r\n    bytes memory data = msg.data;\r\n\r\n    assembly\r\n    {\r\n      let result := delegatecall(gas(), implementation, add(data, 0x20), mload(data), 0, 0)\r\n      let size := returndatasize()\r\n      let ptr := mload(0x40)\r\n      returndatacopy(ptr, 0, size)\r\n      switch result\r\n      case 0 {revert(ptr, size)}\r\n      default {return(ptr, size)}\r\n    }\r\n  }\r\n}\r\n",
  "sourcePath": "C:/Users/User/Projects/Surveys_V2/contracts/ProxySurveys.sol",
  "ast": {
    "absolutePath": "/C/Users/User/Projects/Surveys_V2/contracts/ProxySurveys.sol",
    "exportedSymbols": {
      "ProxySurveys": [
        433
      ]
    },
    "id": 434,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 356,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:2"
      },
      {
        "id": 357,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "60:33:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 358,
        "nodeType": "ImportDirective",
        "scope": 434,
        "sourceUnit": 1326,
        "src": "97:55:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 359,
        "nodeType": "ImportDirective",
        "scope": 434,
        "sourceUnit": 623,
        "src": "154:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/User/Projects/Surveys_V2/contracts/StorageSurveys.sol",
        "file": "./StorageSurveys.sol",
        "id": 360,
        "nodeType": "ImportDirective",
        "scope": 434,
        "sourceUnit": 491,
        "src": "208:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 361,
              "name": "StorageSurveys",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 490,
              "src": "267:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StorageSurveys_$490",
                "typeString": "contract StorageSurveys"
              }
            },
            "id": 362,
            "nodeType": "InheritanceSpecifier",
            "src": "267:14:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 363,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1325,
              "src": "283:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1325",
                "typeString": "contract ERC20"
              }
            },
            "id": 364,
            "nodeType": "InheritanceSpecifier",
            "src": "283:5:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 365,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 622,
              "src": "290:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$622",
                "typeString": "contract Ownable"
              }
            },
            "id": 366,
            "nodeType": "InheritanceSpecifier",
            "src": "290:7:2"
          }
        ],
        "contractDependencies": [
          490,
          513,
          622,
          1325,
          1403
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 433,
        "linearizedBaseContracts": [
          433,
          622,
          1325,
          1403,
          513,
          490
        ],
        "name": "ProxySurveys",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 368,
            "mutability": "mutable",
            "name": "currentAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 433,
            "src": "304:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 367,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "304:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 398,
              "nodeType": "Block",
              "src": "431:154:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 379,
                      "name": "currentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "438:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 380,
                      "name": "_currentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "455:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "438:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "438:32:2"
                },
                {
                  "assignments": [
                    384
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 384,
                      "mutability": "mutable",
                      "name": "internalInitialSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 398,
                      "src": "477:26:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 383,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "477:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 391,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 385,
                      "name": "initialSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 372,
                      "src": "506:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "523:2:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3138",
                            "id": 387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "529:2:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "523:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        }
                      ],
                      "id": 389,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "522:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "506:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "477:55:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 393,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "545:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "545:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 395,
                        "name": "internalInitialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "557:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 392,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1201,
                      "src": "539:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "539:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "539:40:2"
                }
              ]
            },
            "documentation": null,
            "id": 399,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "537572766579546f6b656e",
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "406:13:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1d3d14392ff00c6e523e704a0fb31272fd8b98bf0ff7dd4754ec33e420e2f46c",
                      "typeString": "literal_string \"SurveyToken\""
                    },
                    "value": "SurveyToken"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "535654",
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "421:5:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_24080126bd3b7d3d71f5be712d7c82e8c6fbc6770f18f2dd45832a00329bfb9c",
                      "typeString": "literal_string \"SVT\""
                    },
                    "value": "SVT"
                  }
                ],
                "id": 377,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 374,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1325,
                  "src": "400:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$1325_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "400:27:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 370,
                  "mutability": "mutable",
                  "name": "_currentAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 399,
                  "src": "345:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "345:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 372,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 399,
                  "src": "370:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "344:48:2"
            },
            "returnParameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "431:0:2"
            },
            "scope": 433,
            "src": "333:252:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 408,
              "nodeType": "Block",
              "src": "638:41:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 404,
                      "name": "currentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "645:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 405,
                      "name": "_newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 401,
                      "src": "662:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "645:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "645:28:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1c1b8772",
            "id": 409,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 401,
                  "mutability": "mutable",
                  "name": "_newAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 409,
                  "src": "607:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "606:21:2"
            },
            "returnParameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "638:0:2"
            },
            "scope": 433,
            "src": "591:88:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "739:480:2",
              "statements": [
                {
                  "assignments": [
                    413
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 413,
                      "mutability": "mutable",
                      "name": "implementation",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 431,
                      "src": "780:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 412,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "780:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 415,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 414,
                    "name": "currentAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 368,
                    "src": "805:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "780:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 417,
                          "name": "currentAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 368,
                          "src": "834:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "860:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "852:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 418,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "852:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "852:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "834:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 416,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "826:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "826:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "826:37:2"
                },
                {
                  "assignments": [
                    426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 426,
                      "mutability": "mutable",
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 431,
                      "src": "870:17:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 425,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "870:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 429,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 427,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "890:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "890:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "870:28:2"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "921:293:2",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "930:85:2",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "957:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "957:5:2"
                            },
                            {
                              "name": "implementation",
                              "nodeType": "YulIdentifier",
                              "src": "964:14:2"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "984:4:2"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "990:4:2",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "980:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "980:15:2"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "1003:4:2"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "997:5:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "997:11:2"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1010:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1013:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "944:12:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "944:71:2"
                        },
                        "variables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "934:6:2",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1023:28:2",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "1035:14:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1035:16:2"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "1027:4:2",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1059:22:2",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1076:4:2",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1070:5:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1070:11:2"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "1063:3:2",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "1104:3:2"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1109:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "1112:4:2"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1089:14:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1089:28:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1089:28:2"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1153:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1161:3:2"
                                      },
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "1166:4:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "1154:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1154:17:2"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1154:17:2"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "1146:26:2",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1151:1:2",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1188:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1196:3:2"
                                      },
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "1201:4:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "1189:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1189:17:2"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1189:17:2"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "1180:27:2",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "result",
                          "nodeType": "YulIdentifier",
                          "src": "1132:6:2"
                        },
                        "nodeType": "YulSwitch",
                        "src": "1125:82:2"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 426,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1003:4:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 426,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "984:4:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 413,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "964:14:2",
                      "valueSize": 1
                    }
                  ],
                  "id": 430,
                  "nodeType": "InlineAssembly",
                  "src": "907:307:2"
                }
              ]
            },
            "documentation": null,
            "id": 432,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "716:2:2"
            },
            "returnParameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "739:0:2"
            },
            "scope": 433,
            "src": "708:511:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 434,
        "src": "242:980:2"
      }
    ],
    "src": "35:1189:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/User/Projects/Surveys_V2/contracts/ProxySurveys.sol",
    "exportedSymbols": {
      "ProxySurveys": [
        433
      ]
    },
    "id": 434,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 356,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:2"
      },
      {
        "id": 357,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "60:33:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 358,
        "nodeType": "ImportDirective",
        "scope": 434,
        "sourceUnit": 1326,
        "src": "97:55:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 359,
        "nodeType": "ImportDirective",
        "scope": 434,
        "sourceUnit": 623,
        "src": "154:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/User/Projects/Surveys_V2/contracts/StorageSurveys.sol",
        "file": "./StorageSurveys.sol",
        "id": 360,
        "nodeType": "ImportDirective",
        "scope": 434,
        "sourceUnit": 491,
        "src": "208:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 361,
              "name": "StorageSurveys",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 490,
              "src": "267:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StorageSurveys_$490",
                "typeString": "contract StorageSurveys"
              }
            },
            "id": 362,
            "nodeType": "InheritanceSpecifier",
            "src": "267:14:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 363,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1325,
              "src": "283:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1325",
                "typeString": "contract ERC20"
              }
            },
            "id": 364,
            "nodeType": "InheritanceSpecifier",
            "src": "283:5:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 365,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 622,
              "src": "290:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$622",
                "typeString": "contract Ownable"
              }
            },
            "id": 366,
            "nodeType": "InheritanceSpecifier",
            "src": "290:7:2"
          }
        ],
        "contractDependencies": [
          490,
          513,
          622,
          1325,
          1403
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 433,
        "linearizedBaseContracts": [
          433,
          622,
          1325,
          1403,
          513,
          490
        ],
        "name": "ProxySurveys",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 368,
            "mutability": "mutable",
            "name": "currentAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 433,
            "src": "304:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 367,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "304:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 398,
              "nodeType": "Block",
              "src": "431:154:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 379,
                      "name": "currentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "438:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 380,
                      "name": "_currentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "455:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "438:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "438:32:2"
                },
                {
                  "assignments": [
                    384
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 384,
                      "mutability": "mutable",
                      "name": "internalInitialSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 398,
                      "src": "477:26:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 383,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "477:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 391,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 385,
                      "name": "initialSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 372,
                      "src": "506:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "523:2:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3138",
                            "id": 387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "529:2:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "523:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        }
                      ],
                      "id": 389,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "522:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "506:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "477:55:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 393,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "545:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "545:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 395,
                        "name": "internalInitialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "557:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 392,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1201,
                      "src": "539:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "539:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "539:40:2"
                }
              ]
            },
            "documentation": null,
            "id": 399,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "537572766579546f6b656e",
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "406:13:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1d3d14392ff00c6e523e704a0fb31272fd8b98bf0ff7dd4754ec33e420e2f46c",
                      "typeString": "literal_string \"SurveyToken\""
                    },
                    "value": "SurveyToken"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "535654",
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "421:5:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_24080126bd3b7d3d71f5be712d7c82e8c6fbc6770f18f2dd45832a00329bfb9c",
                      "typeString": "literal_string \"SVT\""
                    },
                    "value": "SVT"
                  }
                ],
                "id": 377,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 374,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1325,
                  "src": "400:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$1325_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "400:27:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 370,
                  "mutability": "mutable",
                  "name": "_currentAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 399,
                  "src": "345:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "345:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 372,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 399,
                  "src": "370:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "344:48:2"
            },
            "returnParameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "431:0:2"
            },
            "scope": 433,
            "src": "333:252:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 408,
              "nodeType": "Block",
              "src": "638:41:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 404,
                      "name": "currentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "645:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 405,
                      "name": "_newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 401,
                      "src": "662:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "645:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "645:28:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1c1b8772",
            "id": 409,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 401,
                  "mutability": "mutable",
                  "name": "_newAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 409,
                  "src": "607:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "606:21:2"
            },
            "returnParameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "638:0:2"
            },
            "scope": 433,
            "src": "591:88:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "739:480:2",
              "statements": [
                {
                  "assignments": [
                    413
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 413,
                      "mutability": "mutable",
                      "name": "implementation",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 431,
                      "src": "780:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 412,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "780:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 415,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 414,
                    "name": "currentAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 368,
                    "src": "805:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "780:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 417,
                          "name": "currentAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 368,
                          "src": "834:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "860:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "852:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 418,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "852:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "852:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "834:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 416,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "826:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "826:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "826:37:2"
                },
                {
                  "assignments": [
                    426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 426,
                      "mutability": "mutable",
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 431,
                      "src": "870:17:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 425,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "870:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 429,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 427,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "890:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "890:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "870:28:2"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "921:293:2",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "930:85:2",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "957:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "957:5:2"
                            },
                            {
                              "name": "implementation",
                              "nodeType": "YulIdentifier",
                              "src": "964:14:2"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "984:4:2"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "990:4:2",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "980:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "980:15:2"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "1003:4:2"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "997:5:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "997:11:2"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1010:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1013:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "944:12:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "944:71:2"
                        },
                        "variables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "934:6:2",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1023:28:2",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "1035:14:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1035:16:2"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "1027:4:2",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1059:22:2",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1076:4:2",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1070:5:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1070:11:2"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "1063:3:2",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "1104:3:2"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1109:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "1112:4:2"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1089:14:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1089:28:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1089:28:2"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1153:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1161:3:2"
                                      },
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "1166:4:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "1154:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1154:17:2"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1154:17:2"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "1146:26:2",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1151:1:2",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1188:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1196:3:2"
                                      },
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "1201:4:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "1189:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1189:17:2"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1189:17:2"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "1180:27:2",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "result",
                          "nodeType": "YulIdentifier",
                          "src": "1132:6:2"
                        },
                        "nodeType": "YulSwitch",
                        "src": "1125:82:2"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 426,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1003:4:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 426,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "984:4:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 413,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "964:14:2",
                      "valueSize": 1
                    }
                  ],
                  "id": 430,
                  "nodeType": "InlineAssembly",
                  "src": "907:307:2"
                }
              ]
            },
            "documentation": null,
            "id": 432,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "716:2:2"
            },
            "returnParameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "739:0:2"
            },
            "scope": 433,
            "src": "708:511:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 434,
        "src": "242:980:2"
      }
    ],
    "src": "35:1189:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.4",
  "updatedAt": "2020-09-14T14:59:29.582Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}