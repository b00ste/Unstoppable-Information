{
  "contractName": "ProxySurveys",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currentAddress",
          "type": "address"
        },
        {
          "internalType": "contract IERC777",
          "name": "token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_choice",
          "type": "string"
        }
      ],
      "name": "getPollChoiceVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "getPollChoices",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ofNumber",
          "type": "uint256"
        }
      ],
      "name": "getPollName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "getPollOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "getPollParticipantsAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "getPollStoppedStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "getPollTotalParticipants",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "getPollValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_ofNumber",
          "type": "uint256"
        }
      ],
      "name": "getSurveyAnswers",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ofNumber",
          "type": "uint256"
        }
      ],
      "name": "getSurveyName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "getSurveyOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "getSurveyParticipantsAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "getSurveyQuestions",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "getSurveyStoppedStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "getSurveyTotalParticipants",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "getSurveyValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_valueName",
          "type": "string"
        }
      ],
      "name": "getUintStorage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getUserCreatedPolls",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getUserCreatedSurveys",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getUserNumberOfPolls",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getUserNumberOfSurveys",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currentAddress\",\"type\":\"address\"},{\"internalType\":\"contract IERC777\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_choice\",\"type\":\"string\"}],\"name\":\"getPollChoiceVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getPollChoices\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ofNumber\",\"type\":\"uint256\"}],\"name\":\"getPollName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getPollOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getPollParticipantsAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getPollStoppedStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getPollTotalParticipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getPollValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_ofNumber\",\"type\":\"uint256\"}],\"name\":\"getSurveyAnswers\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ofNumber\",\"type\":\"uint256\"}],\"name\":\"getSurveyName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getSurveyOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getSurveyParticipantsAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getSurveyQuestions\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getSurveyStoppedStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getSurveyTotalParticipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getSurveyValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_valueName\",\"type\":\"string\"}],\"name\":\"getUintStorage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserCreatedPolls\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserCreatedSurveys\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getUserNumberOfPolls\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getUserNumberOfSurveys\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/Daniel/Projects/Surveys_V2/contracts/ProxySurveys.sol\":\"ProxySurveys\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Daniel/Projects/Surveys_V2/contracts/ProxySurveys.sol\":{\"keccak256\":\"0x72dcac500ed94bd7186ad033faf0dc84812a18ef6d2d0e289ba5ca5091f4064c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96ccd679967665495a6bb9b6e41a21d2d6a035946321504a485dcb4c0f3b5835\",\"dweb:/ipfs/Qmauaf56CFwfMPmkEpBL4nkeoKz5nc7sr4hdiLX9n77xUR\"]},\"/C/Users/Daniel/Projects/Surveys_V2/contracts/StorageSurveys.sol\":{\"keccak256\":\"0xa13e086349844ad476e85af8d0daac79e84e894dd6b7ec7b852c2f511e3d12a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03477e33ff9610e1f4ce6e92c544e89dbe9a470b750d9b6af4def1af3e68e477\",\"dweb:/ipfs/QmZ8cE2fFYbA7JS7cvHJqiRMRUxxocQWHfTGxUGfi7nAtk\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x7846aa81baa00557eba6215442eab916bc98f2e692fdc7b8523cf31122dc8e28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a5491dcdcdbea4bf8695e1c75f5f723dcd19c1392e8ff7a5fc56e13b5794e1\",\"dweb:/ipfs/QmcAFeKKXAFFEzCShHhT65smF8SDhhMg5oWmU3TWKPpTFT\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0xc9e219f9060c261ab6d140f448ccdcb207ce9835f0d2868d2c5d4a93486d2208\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a03ae88229a14e3c0060e558300ba7ab5bdcea10aa814c80d6148e0914d4fdf3\",\"dweb:/ipfs/QmYS76B2bAVTcuzmtYVAt6mY4qr16tZSsWP7dUWdcAgRww\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0xe4be617d1e043920582d2ec0bc1fe3985a3a49cfedac80c0cf0b9ea5d31044b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1beb3d95ab30460159efed1fc39f9253a3bb66ce50253fc487d927b7fe32165d\",\"dweb:/ipfs/QmVtVWHT6vVfFknNX9gxtrX1xYoLbq8YeZLZrSKYcCyKY8\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002dac38038062002dac833981810160405260408110156200003757600080fd5b8101908080519060200190929190805190602001909291905050506000620000646200018d60201b60201c565b905080600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35081600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000195565b600033905090565b612c0780620001a56000396000f3fe60806040526004361061016a5760003560e01c8063739f213f116100d157806391c35b791161008a578063a99d21b411610064578063a99d21b41461128f578063ad27106b1461136b578063f2e21d821461145d578063f2fde38b146115115761016b565b806391c35b79146110215780639ade79a2146110d5578063a441a3fd146111b15761016b565b8063739f213f14610c6d57806377865d7114610d215780637c1dc72b14610dfd57806385f8830314610ed95780638c3e778e14610f045780638da5cb5b14610fe05761016b565b80633572a926116101235780633572a9261461084c5780633cd4ef18146109005780634d25871d14610a73578063613303f314610b4f57806365ae67c814610b7a578063715018a614610c565761016b565b8063094c291b1461025e5780630b5ceb781461033c578063155ddb071461042e57806316339bf81461056f5780631c1b8772146106ba5780631ed4cba31461070b5761016b565b5b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff16600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156101ee57600080fd5b60606000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509050600080825160208401855af43d604051816000823e826000811461025a578282f35b8282fd5b34801561026a57600080fd5b506103246004803603602081101561028157600080fd5b810190808035906020019064010000000081111561029e57600080fd5b8201836020820111156102b057600080fd5b803590602001918460018302840111640100000000831117156102d257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611562565b60405180821515815260200191505060405180910390f35b34801561034857600080fd5b506104026004803603602081101561035f57600080fd5b810190808035906020019064010000000081111561037c57600080fd5b82018360208201111561038e57600080fd5b803590602001918460018302840111640100000000831117156103b057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611621565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561043a57600080fd5b506104f46004803603602081101561045157600080fd5b810190808035906020019064010000000081111561046e57600080fd5b82018360208201111561048057600080fd5b803590602001918460018302840111640100000000831117156104a257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506116f2565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610534578082015181840152602081019050610519565b50505050905090810190601f1680156105615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561057b57600080fd5b5061063f6004803603604081101561059257600080fd5b81019080803590602001906401000000008111156105af57600080fd5b8201836020820111156105c157600080fd5b803590602001918460018302840111640100000000831117156105e357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919050505061183c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561067f578082015181840152602081019050610664565b50505050905090810190601f1680156106ac5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106c657600080fd5b50610709600480360360208110156106dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061199c565b005b34801561071757600080fd5b506107d16004803603602081101561072e57600080fd5b810190808035906020019064010000000081111561074b57600080fd5b82018360208201111561075d57600080fd5b8035906020019184600183028401116401000000008311171561077f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611aaa565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108115780820151818401526020810190506107f6565b50505050905090810190601f16801561083e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561085857600080fd5b506108856004803603602081101561086f57600080fd5b8101908080359060200190929190505050611bf4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108c55780820151818401526020810190506108aa565b50505050905090810190601f1680156108f25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561090c57600080fd5b50610a5d6004803603604081101561092357600080fd5b810190808035906020019064010000000081111561094057600080fd5b82018360208201111561095257600080fd5b8035906020019184600183028401116401000000008311171561097457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156109d757600080fd5b8201836020820111156109e957600080fd5b80359060200191846001830284011164010000000083111715610a0b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611ce9565b6040518082815260200191505060405180910390f35b348015610a7f57600080fd5b50610b3960048036036020811015610a9657600080fd5b8101908080359060200190640100000000811115610ab357600080fd5b820183602082011115610ac557600080fd5b80359060200191846001830284011164010000000083111715610ae757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611dc7565b6040518082815260200191505060405180910390f35b348015610b5b57600080fd5b50610b64611e78565b6040518082815260200191505060405180910390f35b348015610b8657600080fd5b50610c4060048036036020811015610b9d57600080fd5b8101908080359060200190640100000000811115610bba57600080fd5b820183602082011115610bcc57600080fd5b80359060200191846001830284011164010000000083111715610bee57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611efe565b6040518082815260200191505060405180910390f35b348015610c6257600080fd5b50610c6b611f71565b005b348015610c7957600080fd5b50610ca660048036036020811015610c9057600080fd5b81019080803590602001909291905050506120fc565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ce6578082015181840152602081019050610ccb565b50505050905090810190601f168015610d135780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610d2d57600080fd5b50610de760048036036020811015610d4457600080fd5b8101908080359060200190640100000000811115610d6157600080fd5b820183602082011115610d7357600080fd5b80359060200191846001830284011164010000000083111715610d9557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506121f1565b6040518082815260200191505060405180910390f35b348015610e0957600080fd5b50610ec360048036036020811015610e2057600080fd5b8101908080359060200190640100000000811115610e3d57600080fd5b820183602082011115610e4f57600080fd5b80359060200191846001830284011164010000000083111715610e7157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506122a3565b6040518082815260200191505060405180910390f35b348015610ee557600080fd5b50610eee612355565b6040518082815260200191505060405180910390f35b348015610f1057600080fd5b50610fca60048036036020811015610f2757600080fd5b8101908080359060200190640100000000811115610f4457600080fd5b820183602082011115610f5657600080fd5b80359060200191846001830284011164010000000083111715610f7857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506123db565b6040518082815260200191505060405180910390f35b348015610fec57600080fd5b50610ff561248c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561102d57600080fd5b5061105a6004803603602081101561104457600080fd5b81019080803590602001909291905050506124b6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561109a57808201518184015260208101905061107f565b50505050905090810190601f1680156110c75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156110e157600080fd5b5061119b600480360360208110156110f857600080fd5b810190808035906020019064010000000081111561111557600080fd5b82018360208201111561112757600080fd5b8035906020019184600183028401116401000000008311171561114957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506125ab565b6040518082815260200191505060405180910390f35b3480156111bd57600080fd5b50611277600480360360208110156111d457600080fd5b81019080803590602001906401000000008111156111f157600080fd5b82018360208201111561120357600080fd5b8035906020019184600183028401116401000000008311171561122557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061265d565b60405180821515815260200191505060405180910390f35b34801561129b57600080fd5b50611355600480360360208110156112b257600080fd5b81019080803590602001906401000000008111156112cf57600080fd5b8201836020820111156112e157600080fd5b8035906020019184600183028401116401000000008311171561130357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061271b565b6040518082815260200191505060405180910390f35b34801561137757600080fd5b506114316004803603602081101561138e57600080fd5b81019080803590602001906401000000008111156113ab57600080fd5b8201836020820111156113bd57600080fd5b803590602001918460018302840111640100000000831117156113df57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506127cc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561146957600080fd5b506114966004803603602081101561148057600080fd5b810190808035906020019092919050505061289e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156114d65780820151818401526020810190506114bb565b50505050905090810190601f1680156115035780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561151d57600080fd5b506115606004803603602081101561153457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612993565b005b60006001826040518082805190602001908083835b6020831061159a5780518252602082019150602081019050602083039250611577565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060030160405180807f73746f7070656453746174757300000000000000000000000000000000000000815250600d019050908152602001604051809103902060009054906101000a900460ff169050919050565b600080826040518082805190602001908083835b602083106116585780518252602082019150602081019050602083039250611635565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060040160405180807f7375727665794f776e6572000000000000000000000000000000000000000000815250600b019050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60606000826040518082805190602001908083835b6020831061172a5780518252602082019150602081019050602083039250611707565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160405180807f7175657374696f6e730000000000000000000000000000000000000000000000815250600901905090815260200160405180910390208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118305780601f1061180557610100808354040283529160200191611830565b820191906000526020600020905b81548152906001019060200180831161181357829003601f168201915b50505050509050919050565b60606000836040518082805190602001908083835b602083106118745780518252602082019150602081019050602083039250611851565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060020160405180807f616e7377657273000000000000000000000000000000000000000000000000008152506007019050908152602001604051809103902082815481106118f157fe5b906000526020600020018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561198f5780601f106119645761010080835404028352916020019161198f565b820191906000526020600020905b81548152906001019060200180831161197257829003601f168201915b5050505050905092915050565b6119a4612ba3565b73ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a66576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606001826040518082805190602001908083835b60208310611ae25780518252602082019150602081019050602083039250611abf565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160405180807f63686f6963657300000000000000000000000000000000000000000000000000815250600701905090815260200160405180910390208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611be85780601f10611bbd57610100808354040283529160200191611be8565b820191906000526020600020905b815481529060010190602001808311611bcb57829003601f168201915b50505050509050919050565b6060600860405180807f706f6c6c73000000000000000000000000000000000000000000000000000000815250600501905090815260200160405180910390208281548110611c3f57fe5b906000526020600020018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611cdd5780601f10611cb257610100808354040283529160200191611cdd565b820191906000526020600020905b815481529060010190602001808311611cc057829003601f168201915b50505050509050919050565b60006001836040518082805190602001908083835b60208310611d215780518252602082019150602081019050602083039250611cfe565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600001826040518082805190602001908083835b60208310611d8b5780518252602082019150602081019050602083039250611d68565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902054905092915050565b600080826040518082805190602001908083835b60208310611dfe5780518252602082019150602081019050602083039250611ddb565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160405180807f76616c756500000000000000000000000000000000000000000000000000000081525060050190509081526020016040518091039020549050919050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160405180807f7375727665797343726561746564000000000000000000000000000000000000815250600e019050908152602001604051809103902054905090565b60006006826040518082805190602001908083835b60208310611f365780518252602082019150602081019050602083039250611f13565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020549050919050565b611f79612ba3565b73ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461203b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6060600860405180807f737572766579730000000000000000000000000000000000000000000000000081525060070190509081526020016040518091039020828154811061214757fe5b906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121e55780601f106121ba576101008083540402835291602001916121e5565b820191906000526020600020905b8154815290600101906020018083116121c857829003601f168201915b50505050509050919050565b60006001826040518082805190602001908083835b602083106122295780518252602082019150602081019050602083039250612206565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160405180807f76616c756500000000000000000000000000000000000000000000000000000081525060050190509081526020016040518091039020549050919050565b60006001826040518082805190602001908083835b602083106122db57805182526020820191506020810190506020830392506122b8565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160405180807f746f74616c50617274696369706174656400000000000000000000000000000081525060110190509081526020016040518091039020549050919050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160405180807f706f6c6c73437265617465640000000000000000000000000000000000000000815250600c019050908152602001604051809103902054905090565b600080826040518082805190602001908083835b6020831061241257805182526020820191506020810190506020830392506123ef565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160405180807f746f74616c50617274696369706174656400000000000000000000000000000081525060110190509081526020016040518091039020549050919050565b6000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561259f5780601f106125745761010080835404028352916020019161259f565b820191906000526020600020905b81548152906001019060200180831161258257829003601f168201915b50505050509050919050565b60006001826040518082805190602001908083835b602083106125e357805182526020820191506020810190506020830392506125c0565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160405180807f7061727469636970616e7473416c6c6f7765640000000000000000000000000081525060130190509081526020016040518091039020549050919050565b600080826040518082805190602001908083835b602083106126945780518252602082019150602081019050602083039250612671565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060030160405180807f73746f7070656453746174757300000000000000000000000000000000000000815250600d019050908152602001604051809103902060009054906101000a900460ff169050919050565b600080826040518082805190602001908083835b60208310612752578051825260208201915060208101905060208303925061272f565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160405180807f7061727469636970616e7473416c6c6f7765640000000000000000000000000081525060130190509081526020016040518091039020549050919050565b60006001826040518082805190602001908083835b6020831061280457805182526020820191506020810190506020830392506127e1565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060040160405180807f706f6c6c4f776e657200000000000000000000000000000000000000000000008152506009019050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6060600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060070160008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156129875780601f1061295c57610100808354040283529160200191612987565b820191906000526020600020905b81548152906001019060200180831161296a57829003601f168201915b50505050509050919050565b61299b612ba3565b73ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612a5d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612ae3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612bac6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220217c7a20d16d021e656d825df644be44d00c4a260c17f01948acbb590720d2a364736f6c634300060c0033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "345:890:2:-:0;;;460:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;865:17:6;885:12;:10;;;:12;;:::i;:::-;865:32;;916:9;907:6;;:18;;;;;;;;;;;;;;;;;;973:9;940:43;;969:1;940:43;;;;;;;;;;;;831:159;546:15:2;529:14;;:32;;;;;;;;;;;;;;;;;;577:5;568:6;;:14;;;;;;;;;;;;;;;;;;460:128;;345:890;;590:104:5;643:15;677:10;670:17;;590:104;:::o;345:890:2:-;;;;;;;",
  "deployedSourceMap": "345:890:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;793:22;818:14;;;;;;;;;;;793:39;;873:1;847:28;;:14;;;;;;;;;;;:28;;;;839:37;;;;;;883:17;903:8;;883:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1026:1;1023;1016:4;1010:11;1003:4;997;993:15;977:14;970:5;957:71;1048:16;1089:4;1083:11;1125:4;1122:1;1117:3;1102:28;1145:6;1164:1;1159:26;;;;1214:4;1209:3;1202:17;1159:26;1179:4;1174:3;1167:17;4667:150:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3542;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2544:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3047:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;594:98:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3869:149:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3727:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4356:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3239:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5155;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4992:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1689:145:6;;;;;;;;;;;;;:::i;:::-;;2398:142:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4526:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4191:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5457:137;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2878:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1066:77:6;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5300:153:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4022:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3384:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2705:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4821:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5598:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1983:240:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4667:150:3;4738:4;4761:12;4774:5;4761:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:32;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4754:57;;4667:150;;;:::o;3542:::-;3607:7;3633:14;3648:5;3633:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:37;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3626:60;;3542:150;;;:::o;2544:157::-;2613:13;2645:14;2660:5;2645:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:36;;:49;;;;;;;;;;;;;;;;;;;;;;;;2638:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:157;;;:::o;3047:188::-;3133:13;3165:14;3180:5;3165:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:41;;:52;;;;;;;;;;;;;;;;;;;;;;;;3218:9;3165:63;;;;;;;;;;;;;;;3158:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3047:188;;;;:::o;594:98:2:-;1280:12:6;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;675:11:2::1;658:14;;:28;;;;;;;;;;;;;;;;;;594:98:::0;:::o;3869:149:3:-;3934:13;3966:12;3979:5;3966:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:34;;:45;;;;;;;;;;;;;;;;;;;;;;;;3959:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3869:149;;;:::o;3727:138::-;3787:13;3819:19;:28;;;;;;;;;;;;;;;;;;;;;;;;3848:9;3819:39;;;;;;;;;;;;;;;3812:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3727:138;;;:::o;4356:166::-;4448:7;4474:12;4487:5;4474:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:32;;4507:7;4474:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4467:49;;4356:166;;;;:::o;3239:141::-;3304:7;3330:14;3345:5;3330:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:34;;:43;;;;;;;;;;;;;;;;;;;;;;;;;3323:51;;3239:141;;;:::o;5155:::-;5208:7;5234:12;:24;5247:10;5234:24;;;;;;;;;;;;;;;:37;;:55;;;;;;;;;;;;;;;;;;;;;;;;;5227:63;;5155:141;:::o;4992:127::-;5062:7;5088:12;5101:10;5088:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5081:32;;4992:127;;;:::o;1689:145:6:-;1280:12;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1795:1:::1;1758:40;;1779:6;;;;;;;;;;;1758:40;;;;;;;;;;;;1825:1;1808:6;;:19;;;;;;;;;;;;;;;;;;1689:145::o:0;2398:142:3:-;2460:13;2492:19;:30;;;;;;;;;;;;;;;;;;;;;;;;2523:9;2492:41;;;;;;;;;;;;;;;2485:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2398:142;;;:::o;4526:137::-;4589:7;4615:12;4628:5;4615:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:32;;:41;;;;;;;;;;;;;;;;;;;;;;;;;4608:49;;4526:137;;;:::o;4191:161::-;4266:7;4292:12;4305:5;4292:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:32;;:53;;;;;;;;;;;;;;;;;;;;;;;;;4285:61;;4191:161;;;:::o;5457:137::-;5508:7;5534:12;:24;5547:10;5534:24;;;;;;;;;;;;;;;:37;;:53;;;;;;;;;;;;;;;;;;;;;;;;;5527:61;;5457:137;:::o;2878:165::-;2955:7;2981:14;2996:5;2981:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:34;;:55;;;;;;;;;;;;;;;;;;;;;;;;;2974:63;;2878:165;;;:::o;1066:77:6:-;1104:7;1130:6;;;;;;;;;;;1123:13;;1066:77;:::o;5300:153:3:-;5368:13;5400:12;:24;5413:10;5400:24;;;;;;;;;;;;;;;:38;;:46;5439:6;5400:46;;;;;;;;;;;5393:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5300:153;;;:::o;4022:165::-;4099:7;4125:12;4138:5;4125:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:32;;:55;;;;;;;;;;;;;;;;;;;;;;;;;4118:63;;4022:165;;;:::o;3384:154::-;3457:4;3480:14;3495:5;3480:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:34;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3473:59;;3384:154;;;:::o;2705:169::-;2784:7;2810:14;2825:5;2810:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:34;;:57;;;;;;;;;;;;;;;;;;;;;;;;;2803:65;;2705:169;;;:::o;4821:144::-;4884:7;4910:12;4923:5;4910:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:35;;:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4903:56;;4821:144;;;:::o;5598:148::-;5664:13;5696:12;:24;5709:10;5696:24;;;;;;;;;;;;;;;:35;;:43;5732:6;5696:43;;;;;;;;;;;5689:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5598:148;;;:::o;1983:240:6:-;1280:12;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2091:1:::1;2071:22;;:8;:22;;;;2063:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:8;2151:38;;2172:6;;;;;;;;;;;2151:38;;;;;;;;;;;;2208:8;2199:6;;:17;;;;;;;;;;;;;;;;;;1983:240:::0;:::o;590:104:5:-;643:15;677:10;670:17;;590:104;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.6.12;\r\n\r\nimport \"./StorageSurveys.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC777/IERC777.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol\";\r\n\r\ncontract ProxySurveys is StorageSurveys, Ownable\r\n{\r\n  address currentAddress;\r\n  \r\n  IERC777 private _token;\r\n\r\n  constructor(address _currentAddress, IERC777 token) public\r\n  {\r\n    currentAddress = _currentAddress;\r\n    _token = token;\r\n  }\r\n\r\n  function update(address _newAddress) onlyOwner public\r\n  {\r\n    currentAddress = _newAddress;\r\n  }\r\n\r\n  //FALLBACK function\r\n  fallback() payable external\r\n  {\r\n    //Redirect to currentAddress\r\n    address implementation = currentAddress;\r\n    require(currentAddress != address(0));\r\n    bytes memory data = msg.data;\r\n\r\n    assembly\r\n    {\r\n      let result := delegatecall(gas(), implementation, add(data, 0x20), mload(data), 0, 0)\r\n      let size := returndatasize()\r\n      let ptr := mload(0x40)\r\n      returndatacopy(ptr, 0, size)\r\n      switch result\r\n      case 0 {revert(ptr, size)}\r\n      default {return(ptr, size)}\r\n    }\r\n  }\r\n}\r\n",
  "sourcePath": "C:/Users/Daniel/Projects/Surveys_V2/contracts/ProxySurveys.sol",
  "ast": {
    "absolutePath": "/C/Users/Daniel/Projects/Surveys_V2/contracts/ProxySurveys.sol",
    "exportedSymbols": {
      "ProxySurveys": [
        675
      ]
    },
    "id": 676,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 610,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:2"
      },
      {
        "absolutePath": "/C/Users/Daniel/Projects/Surveys_V2/contracts/StorageSurveys.sol",
        "file": "./StorageSurveys.sol",
        "id": 611,
        "nodeType": "ImportDirective",
        "scope": 676,
        "sourceUnit": 1154,
        "src": "62:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 612,
        "nodeType": "ImportDirective",
        "scope": 676,
        "sourceUnit": 1317,
        "src": "94:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
        "file": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
        "id": 613,
        "nodeType": "ImportDirective",
        "scope": 676,
        "sourceUnit": 2940,
        "src": "148:58:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol",
        "file": "@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol",
        "id": 614,
        "nodeType": "ImportDirective",
        "scope": 676,
        "sourceUnit": 2960,
        "src": "208:67:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777Sender.sol",
        "file": "@openzeppelin/contracts/token/ERC777/IERC777Sender.sol",
        "id": 615,
        "nodeType": "ImportDirective",
        "scope": 676,
        "sourceUnit": 2980,
        "src": "277:64:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 616,
              "name": "StorageSurveys",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1153,
              "src": "370:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StorageSurveys_$1153",
                "typeString": "contract StorageSurveys"
              }
            },
            "id": 617,
            "nodeType": "InheritanceSpecifier",
            "src": "370:14:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 618,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1316,
              "src": "386:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1316",
                "typeString": "contract Ownable"
              }
            },
            "id": 619,
            "nodeType": "InheritanceSpecifier",
            "src": "386:7:2"
          }
        ],
        "contractDependencies": [
          1153,
          1207,
          1316
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 675,
        "linearizedBaseContracts": [
          675,
          1316,
          1207,
          1153
        ],
        "name": "ProxySurveys",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 621,
            "mutability": "mutable",
            "name": "currentAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 675,
            "src": "400:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 620,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "400:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 623,
            "mutability": "mutable",
            "name": "_token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 675,
            "src": "431:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC777_$2939",
              "typeString": "contract IERC777"
            },
            "typeName": {
              "contractScope": null,
              "id": 622,
              "name": "IERC777",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2939,
              "src": "431:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC777_$2939",
                "typeString": "contract IERC777"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 638,
              "nodeType": "Block",
              "src": "522:66:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 630,
                      "name": "currentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 621,
                      "src": "529:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 631,
                      "name": "_currentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 625,
                      "src": "546:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "529:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 633,
                  "nodeType": "ExpressionStatement",
                  "src": "529:32:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 634,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 623,
                      "src": "568:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC777_$2939",
                        "typeString": "contract IERC777"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 635,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 627,
                      "src": "577:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC777_$2939",
                        "typeString": "contract IERC777"
                      }
                    },
                    "src": "568:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC777_$2939",
                      "typeString": "contract IERC777"
                    }
                  },
                  "id": 637,
                  "nodeType": "ExpressionStatement",
                  "src": "568:14:2"
                }
              ]
            },
            "documentation": null,
            "id": 639,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 625,
                  "mutability": "mutable",
                  "name": "_currentAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 639,
                  "src": "472:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 627,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 639,
                  "src": "497:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC777_$2939",
                    "typeString": "contract IERC777"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 626,
                    "name": "IERC777",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2939,
                    "src": "497:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC777_$2939",
                      "typeString": "contract IERC777"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "471:40:2"
            },
            "returnParameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "522:0:2"
            },
            "scope": 675,
            "src": "460:128:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 650,
              "nodeType": "Block",
              "src": "651:41:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 646,
                      "name": "currentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 621,
                      "src": "658:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 647,
                      "name": "_newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 641,
                      "src": "675:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "658:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "658:28:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1c1b8772",
            "id": 651,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 644,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 643,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1265,
                  "src": "631:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "631:9:2"
              }
            ],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 641,
                  "mutability": "mutable",
                  "name": "_newAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 651,
                  "src": "610:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "609:21:2"
            },
            "returnParameters": {
              "id": 645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "651:0:2"
            },
            "scope": 675,
            "src": "594:98:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 673,
              "nodeType": "Block",
              "src": "752:480:2",
              "statements": [
                {
                  "assignments": [
                    655
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 655,
                      "mutability": "mutable",
                      "name": "implementation",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 673,
                      "src": "793:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 654,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "793:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 657,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 656,
                    "name": "currentAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 621,
                    "src": "818:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "793:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 659,
                          "name": "currentAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 621,
                          "src": "847:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "873:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "865:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 660,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "865:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "865:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "847:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 658,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "839:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "839:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 666,
                  "nodeType": "ExpressionStatement",
                  "src": "839:37:2"
                },
                {
                  "assignments": [
                    668
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 668,
                      "mutability": "mutable",
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 673,
                      "src": "883:17:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 667,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "883:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 671,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 669,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "903:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "903:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "883:28:2"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "934:293:2",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "943:85:2",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "970:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "970:5:2"
                            },
                            {
                              "name": "implementation",
                              "nodeType": "YulIdentifier",
                              "src": "977:14:2"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "997:4:2"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1003:4:2",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "993:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "993:15:2"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "1016:4:2"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1010:5:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1010:11:2"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1023:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1026:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "957:12:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "957:71:2"
                        },
                        "variables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "947:6:2",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1036:28:2",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "1048:14:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1048:16:2"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "1040:4:2",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1072:22:2",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1089:4:2",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1083:5:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1083:11:2"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "1076:3:2",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "1117:3:2"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1122:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "1125:4:2"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1102:14:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1102:28:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1102:28:2"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1166:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1174:3:2"
                                      },
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "1179:4:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "1167:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1167:17:2"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1167:17:2"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "1159:26:2",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1164:1:2",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1201:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1209:3:2"
                                      },
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "1214:4:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "1202:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1202:17:2"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1202:17:2"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "1193:27:2",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "result",
                          "nodeType": "YulIdentifier",
                          "src": "1145:6:2"
                        },
                        "nodeType": "YulSwitch",
                        "src": "1138:82:2"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 668,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1016:4:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 668,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "997:4:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 655,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "977:14:2",
                      "valueSize": 1
                    }
                  ],
                  "id": 672,
                  "nodeType": "InlineAssembly",
                  "src": "920:307:2"
                }
              ]
            },
            "documentation": null,
            "id": 674,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "729:2:2"
            },
            "returnParameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "752:0:2"
            },
            "scope": 675,
            "src": "721:511:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 676,
        "src": "345:890:2"
      }
    ],
    "src": "35:1202:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Daniel/Projects/Surveys_V2/contracts/ProxySurveys.sol",
    "exportedSymbols": {
      "ProxySurveys": [
        675
      ]
    },
    "id": 676,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 610,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:2"
      },
      {
        "absolutePath": "/C/Users/Daniel/Projects/Surveys_V2/contracts/StorageSurveys.sol",
        "file": "./StorageSurveys.sol",
        "id": 611,
        "nodeType": "ImportDirective",
        "scope": 676,
        "sourceUnit": 1154,
        "src": "62:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 612,
        "nodeType": "ImportDirective",
        "scope": 676,
        "sourceUnit": 1317,
        "src": "94:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
        "file": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
        "id": 613,
        "nodeType": "ImportDirective",
        "scope": 676,
        "sourceUnit": 2940,
        "src": "148:58:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol",
        "file": "@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol",
        "id": 614,
        "nodeType": "ImportDirective",
        "scope": 676,
        "sourceUnit": 2960,
        "src": "208:67:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777Sender.sol",
        "file": "@openzeppelin/contracts/token/ERC777/IERC777Sender.sol",
        "id": 615,
        "nodeType": "ImportDirective",
        "scope": 676,
        "sourceUnit": 2980,
        "src": "277:64:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 616,
              "name": "StorageSurveys",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1153,
              "src": "370:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StorageSurveys_$1153",
                "typeString": "contract StorageSurveys"
              }
            },
            "id": 617,
            "nodeType": "InheritanceSpecifier",
            "src": "370:14:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 618,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1316,
              "src": "386:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1316",
                "typeString": "contract Ownable"
              }
            },
            "id": 619,
            "nodeType": "InheritanceSpecifier",
            "src": "386:7:2"
          }
        ],
        "contractDependencies": [
          1153,
          1207,
          1316
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 675,
        "linearizedBaseContracts": [
          675,
          1316,
          1207,
          1153
        ],
        "name": "ProxySurveys",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 621,
            "mutability": "mutable",
            "name": "currentAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 675,
            "src": "400:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 620,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "400:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 623,
            "mutability": "mutable",
            "name": "_token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 675,
            "src": "431:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC777_$2939",
              "typeString": "contract IERC777"
            },
            "typeName": {
              "contractScope": null,
              "id": 622,
              "name": "IERC777",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2939,
              "src": "431:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC777_$2939",
                "typeString": "contract IERC777"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 638,
              "nodeType": "Block",
              "src": "522:66:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 630,
                      "name": "currentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 621,
                      "src": "529:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 631,
                      "name": "_currentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 625,
                      "src": "546:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "529:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 633,
                  "nodeType": "ExpressionStatement",
                  "src": "529:32:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 634,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 623,
                      "src": "568:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC777_$2939",
                        "typeString": "contract IERC777"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 635,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 627,
                      "src": "577:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC777_$2939",
                        "typeString": "contract IERC777"
                      }
                    },
                    "src": "568:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC777_$2939",
                      "typeString": "contract IERC777"
                    }
                  },
                  "id": 637,
                  "nodeType": "ExpressionStatement",
                  "src": "568:14:2"
                }
              ]
            },
            "documentation": null,
            "id": 639,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 625,
                  "mutability": "mutable",
                  "name": "_currentAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 639,
                  "src": "472:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 627,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 639,
                  "src": "497:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC777_$2939",
                    "typeString": "contract IERC777"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 626,
                    "name": "IERC777",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2939,
                    "src": "497:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC777_$2939",
                      "typeString": "contract IERC777"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "471:40:2"
            },
            "returnParameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "522:0:2"
            },
            "scope": 675,
            "src": "460:128:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 650,
              "nodeType": "Block",
              "src": "651:41:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 646,
                      "name": "currentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 621,
                      "src": "658:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 647,
                      "name": "_newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 641,
                      "src": "675:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "658:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "658:28:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1c1b8772",
            "id": 651,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 644,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 643,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1265,
                  "src": "631:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "631:9:2"
              }
            ],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 641,
                  "mutability": "mutable",
                  "name": "_newAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 651,
                  "src": "610:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "609:21:2"
            },
            "returnParameters": {
              "id": 645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "651:0:2"
            },
            "scope": 675,
            "src": "594:98:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 673,
              "nodeType": "Block",
              "src": "752:480:2",
              "statements": [
                {
                  "assignments": [
                    655
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 655,
                      "mutability": "mutable",
                      "name": "implementation",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 673,
                      "src": "793:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 654,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "793:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 657,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 656,
                    "name": "currentAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 621,
                    "src": "818:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "793:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 659,
                          "name": "currentAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 621,
                          "src": "847:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "873:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "865:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 660,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "865:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "865:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "847:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 658,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "839:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "839:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 666,
                  "nodeType": "ExpressionStatement",
                  "src": "839:37:2"
                },
                {
                  "assignments": [
                    668
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 668,
                      "mutability": "mutable",
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 673,
                      "src": "883:17:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 667,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "883:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 671,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 669,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "903:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "903:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "883:28:2"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "934:293:2",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "943:85:2",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "970:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "970:5:2"
                            },
                            {
                              "name": "implementation",
                              "nodeType": "YulIdentifier",
                              "src": "977:14:2"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "997:4:2"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1003:4:2",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "993:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "993:15:2"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "1016:4:2"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1010:5:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1010:11:2"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1023:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1026:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "957:12:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "957:71:2"
                        },
                        "variables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "947:6:2",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1036:28:2",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "1048:14:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1048:16:2"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "1040:4:2",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1072:22:2",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1089:4:2",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1083:5:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1083:11:2"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "1076:3:2",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "1117:3:2"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1122:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "1125:4:2"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1102:14:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1102:28:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1102:28:2"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1166:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1174:3:2"
                                      },
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "1179:4:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "1167:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1167:17:2"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1167:17:2"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "1159:26:2",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1164:1:2",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1201:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1209:3:2"
                                      },
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "1214:4:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "1202:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1202:17:2"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1202:17:2"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "1193:27:2",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "result",
                          "nodeType": "YulIdentifier",
                          "src": "1145:6:2"
                        },
                        "nodeType": "YulSwitch",
                        "src": "1138:82:2"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 668,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1016:4:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 668,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "997:4:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 655,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "977:14:2",
                      "valueSize": 1
                    }
                  ],
                  "id": 672,
                  "nodeType": "InlineAssembly",
                  "src": "920:307:2"
                }
              ]
            },
            "documentation": null,
            "id": 674,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "729:2:2"
            },
            "returnParameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "752:0:2"
            },
            "scope": 675,
            "src": "721:511:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 676,
        "src": "345:890:2"
      }
    ],
    "src": "35:1202:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x58448F6393b8E090079370E1F4eC771aa749B056",
      "transactionHash": "0x74709e0e2d7df6ef69c0c0c7a9514668fe4504b03e6241993bc85657b117acac"
    }
  },
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-04T19:45:34.892Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}